{"version":3,"file":"gravatar.service.js","sourceRoot":"","sources":["../../src/gravatar.service.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,uBAAuB,EAAE,mBAAmB,EAAE,MAAM,sBAAsB,CAAC;AAEpF,OAAO,EAAE,GAAG,EAAE,MAAM,OAAO,CAAC;AAG5B,IAAa,eAAe,GAA5B;IACI;;;;;;;;OAQG;IACI,GAAG,CAAC,KAAa,EAAE,OAAe,mBAAmB,EAAE,WAAmB,uBAAuB;QACpG,MAAM,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;QACnD,MAAM,CAAC,6BAA6B,SAAS,MAAM,IAAI,MAAM,QAAQ,EAAE,CAAC;IAC5E,CAAC;CACJ,CAAA;AAdY,eAAe;IAD3B,UAAU,EAAE;GACA,eAAe,CAc3B;SAdY,eAAe","sourcesContent":["import { Injectable } from '@angular/core';\nimport { DefaultGravatarFallback, DefaultGravatarSize } from './gravatar.constants';\n\nimport { Md5 } from './md5';\n\n@Injectable()\nexport class GravatarService {\n    /**\n     * Returns the url for a user's gravatar image.\n     *\n     * @param {string} email email associated with gravatar account\n     * @param {number} size size of gravatar image returned\n     * @param {string} fallback fallback in case something goes wrong\n     * @returns {string}\n     * @memberof GravatarService\n     */\n    public url(email: string, size: number = DefaultGravatarSize, fallback: string = DefaultGravatarFallback): string {\n        const emailHash = Md5.hashStr(email.toLowerCase());\n        return `//www.gravatar.com/avatar/${emailHash}?s=${size}&d=${fallback}`;\n    }\n}\n"]}